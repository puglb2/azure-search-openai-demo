name: Build and deploy Node.js app to Azure Web App - ariaamsai2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ariaamsai2
  NODE_VERSION: '20'
  NODE_OPTIONS: --max-old-space-size=4096

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Locate package.json
        id: findpkg
        shell: bash
        run: |
          FILE=$(git ls-files | grep -E '(^|/)package.json$' | head -n1 || true)
          if [ -z "$FILE" ]; then
            echo "::error::No package.json found"; exit 1
          fi
          DIR=$(dirname "$FILE"); [ "$DIR" = "." ] && DIR="."
          echo "dir=$DIR" >> $GITHUB_OUTPUT
          echo "Using app dir: $DIR"

      - name: Install deps (dev + prod)
        working-directory: ${{ steps.findpkg.outputs.dir }}
        run: npm ci || npm install

      - name: Build (Vite)
        working-directory: ${{ steps.findpkg.outputs.dir }}
        run: npm run build

      - name: Create dist zip (contents at root)
        shell: bash
        run: |
          DIST="${{ steps.findpkg.outputs.dir }}/dist"
          if [ ! -d "$DIST" ]; then
            echo "::error::No dist/ folder found after build"; exit 1
          fi
          rm -f app.zip
          cd "$DIST"
          zip -r "$GITHUB_WORKSPACE/app.zip" . -x "*.git*" "**/.github/**" "**/node_modules/**"
          ls -lh "$GITHUB_WORKSPACE/app.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp-dist
          path: app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp-dist
          path: .

      - name: Small safety delay (avoid config/save overlap)
        run: sleep 15

      - name: Deploy to Azure Web App (attempt 1)
        id: deploy1
        continue-on-error: true
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C33BBA65DA2C40FFBB382F961043AE6C }}
          package: app.zip

      - name: Wait before retry
        if: steps.deploy1.outcome == 'failure'
        run: sleep 25

      - name: Deploy to Azure Web App (attempt 2)
        if: steps.deploy1.outcome == 'failure'
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C33BBA65DA2C40FFBB382F961043AE6C }}
          package: app.zip

