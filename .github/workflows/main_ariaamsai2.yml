name: Build and deploy Node.js app to Azure Web App - ariaamsai2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ariaamsai2
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ðŸ”Ž Find the folder that contains package.json (no need to edit it)
      - name: Find package.json directory
        id: findpkg
        shell: bash
        run: |
          set -e
          FILE=$(git ls-files | grep -E '(^|/)package.json$' | head -n1 || true)
          if [ -z "$FILE" ]; then
            echo "No package.json found in repo"; exit 1
          fi
          DIR=$(dirname "$FILE")
          if [ "$DIR" = "." ]; then DIR="."; else DIR="./$DIR"; fi
          echo "Using package dir: $DIR"
          echo "dir=$DIR" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # âœ… Install production deps in CI so node_modules is included in the zip
      - name: Install deps (prod only)
        run: npm ci --omit=dev
        working-directory: ${{ steps.findpkg.outputs.dir }}

      # (Optional) Build step if your server needs it (kept safe)
      - name: Build (if present)
        run: npm run build --if-present
        working-directory: ${{ steps.findpkg.outputs.dir }}

      # ðŸ“¦ Zip the CONTENTS of the app dir (server.js + node_modules + anything built)
      - name: Create deployment zip (ready-to-run)
        shell: bash
        run: |
          set -e
          APP_DIR="${{ steps.findpkg.outputs.dir }}"
          OUT="$GITHUB_WORKSPACE/app-ready.zip"
          rm -f "$OUT"
          cd "$APP_DIR"
          # Zip contents so server.js sits at the zip root in wwwroot
          zip -r "$OUT" . -x "*.git*" "**/.github/**"
          ls -lh "$OUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: app-ready.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Verify artifact
        run: ls -la app-ready.zip

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C33BBA65DA2C40FFBB382F961043AE6C }}
          package: app-ready.zip
